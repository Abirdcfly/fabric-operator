//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
 * Copyright contributors to the Hyperledger Fabric Operator project
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 * 	  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by controller-gen. DO NOT EDIT.

package connector

import ()

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminCredential) DeepCopyInto(out *AdminCredential) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminCredential.
func (in *AdminCredential) DeepCopy() *AdminCredential {
	if in == nil {
		return nil
	}
	out := new(AdminCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelInfo) DeepCopyInto(out *ChannelInfo) {
	*out = *in
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make(map[string]PeerInfo, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelInfo.
func (in *ChannelInfo) DeepCopy() *ChannelInfo {
	if in == nil {
		return nil
	}
	out := new(ChannelInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialStore) DeepCopyInto(out *CredentialStore) {
	*out = *in
	out.CryptoStore = in.CryptoStore
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialStore.
func (in *CredentialStore) DeepCopy() *CredentialStore {
	if in == nil {
		return nil
	}
	out := new(CredentialStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CryptoConfig) DeepCopyInto(out *CryptoConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CryptoConfig.
func (in *CryptoConfig) DeepCopy() *CryptoConfig {
	if in == nil {
		return nil
	}
	out := new(CryptoConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CryptoStore) DeepCopyInto(out *CryptoStore) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CryptoStore.
func (in *CryptoStore) DeepCopy() *CryptoStore {
	if in == nil {
		return nil
	}
	out := new(CryptoStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logging) DeepCopyInto(out *Logging) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logging.
func (in *Logging) DeepCopy() *Logging {
	if in == nil {
		return nil
	}
	out := new(Logging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeEndpoint) DeepCopyInto(out *NodeEndpoint) {
	*out = *in
	out.TLSCACerts = in.TLSCACerts
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeEndpoint.
func (in *NodeEndpoint) DeepCopy() *NodeEndpoint {
	if in == nil {
		return nil
	}
	out := new(NodeEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationInfo) DeepCopyInto(out *OrganizationInfo) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make(map[string]User, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationInfo.
func (in *OrganizationInfo) DeepCopy() *OrganizationInfo {
	if in == nil {
		return nil
	}
	out := new(OrganizationInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeerInfo) DeepCopyInto(out *PeerInfo) {
	*out = *in
	if in.EndorsingPeer != nil {
		in, out := &in.EndorsingPeer, &out.EndorsingPeer
		*out = new(bool)
		**out = **in
	}
	if in.ChaincodeQuery != nil {
		in, out := &in.ChaincodeQuery, &out.ChaincodeQuery
		*out = new(bool)
		**out = **in
	}
	if in.LedgerQuery != nil {
		in, out := &in.LedgerQuery, &out.LedgerQuery
		*out = new(bool)
		**out = **in
	}
	if in.EventSource != nil {
		in, out := &in.EventSource, &out.EventSource
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeerInfo.
func (in *PeerInfo) DeepCopy() *PeerInfo {
	if in == nil {
		return nil
	}
	out := new(PeerInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pem) DeepCopyInto(out *Pem) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pem.
func (in *Pem) DeepCopy() *Pem {
	if in == nil {
		return nil
	}
	out := new(Pem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Profile) DeepCopyInto(out *Profile) {
	*out = *in
	out.Client = in.Client
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make(map[string]ChannelInfo, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Organizations != nil {
		in, out := &in.Organizations, &out.Organizations
		*out = make(map[string]OrganizationInfo, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Orderers != nil {
		in, out := &in.Orderers, &out.Orderers
		*out = make(map[string]NodeEndpoint, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make(map[string]NodeEndpoint, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Profile.
func (in *Profile) DeepCopy() *Profile {
	if in == nil {
		return nil
	}
	out := new(Profile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSCACerts) DeepCopyInto(out *TLSCACerts) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSCACerts.
func (in *TLSCACerts) DeepCopy() *TLSCACerts {
	if in == nil {
		return nil
	}
	out := new(TLSCACerts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.Key = in.Key
	out.Cert = in.Cert
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}
